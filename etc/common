GRIMA_HOME=${TOPLEVEL:="${GRIMA_HOME}"}
GRIMA_HOME=$(cd "${GRIMA_HOME}"; pwd)
export GRIMA_HOME

GRIMA_BIN="${GRIMA_HOME}"/bin
export GRIMA_BIN

GRIMA_DOC="${GRIMA_HOME}"/docs
export GRIMA_DOC

GRIMA_ETC="${GRIMA_HOME}"/etc
export GRIMA_ETC

GRIMA_LIB="${GRIMA_HOME}"/lib
export GRIMA_LIB

GRIMA_SRC="${GRIMA_HOME}"/src
export GRIMA_SRC

GRIMA_VAR="${GRIMA_HOME}"/var
export GRIMA_VAR

GRIMA_ARCHIVE="${GRIMA_VAR}"/archive
export GRIMA_ARCHIVE

GRIMA_DATA="${GRIMA_VAR}"/data
export GRIMA_DATA

GRIMA_DB="${GRIMA_VAR}"/db
export GRIMA_DB

GRIMA_LOG="${GRIMA_VAR}"/log
export GRIMA_LOG

GRIMA_RUN="${GRIMA_VAR}"/run
export GRIMA_RUN

GRIMA_WWW="${GRIMA_VAR}"/www
export GRIMA_WWW

GRIMA_REF="${GRIMA_DOC}"/ref
export GRIMA_REF

GRIMA_CONFIGUREFLAGS="--prefix=${GRIMA_HOME}" 
export GRIMA_CONFIGUREFLAGS

GRIMA_LOGFILE="${GRIMA_LOG}"/grima.log
export GRIMA_LOGFILE

grima_record()
{
        date                    >> "${GRIMA_LOGFILE}"
        echo "$@"               >> "${GRIMA_LOGFILE}"
}

grima_recorde()
{
        grima_record            "$@"
        echo                    "$@"
}

PATH="${GRIMA_BIN}":"${PATH}"
export PATH

LD_LIBRARY_PATH="${GRIMA_LIB}":"${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH

PYTHONPATH="${GRIMA_LIB}":"${GRIMA_LIB}"/python:"${PYTHONPATH}"
export PYTHONPATH

# if [ "${GLADE_CATALOG_PATH}" = "" ]; then
#         GLADE_CATALOG_PATH="${GRIMA_ETC}"/widget-catalog.d
# else
#         GLADE_CATALOG_PATH="${GRIMA_ETC}"/widget-catalog.d:"${GLADE_CATALOG_PATH}"
# fi

# export GLADE_CATALOG_PATH

if [ -d "${GRIMA_HOME}"/dist ]; then
	JARFILES="$(find "${GRIMA_HOME}"/dist -name "*.jar")"
	for jarfile in ${JARFILES}; do
		CLASSPATH="${jarfile}":"${CLASSPATH}"
		export CLASSPATH
	done
fi

if [ -d "${GRIMA_LIB}"/java ]; then
	JARFILES="$(find "${GRIMA_LIB}"/java -name "*.jar")"
	for jarfile in ${JARFILES}; do
		CLASSPATH="${jarfile}":"${CLASSPATH}"
		export CLASSPATH
	done
fi

GRIMA_EXTRAS=

EXTRAS="$(cat "${GRIMA_HOME}"/extras)"

for extra in ${EXTRAS}; do
        TOPLEVEL=

        LOCATIONS=" \
                $(cd "${GRIMA_HOME}"/../..; pwd) \
                /opt/cdsi \
        "

        for location in ${LOCATIONS}; do
                if [ -d "${location}/${extra}" ]; then
                        TOPLEVEL="${location}/${extra}"
                fi
        done

        GRIMA_EXTRAS=" \
                ${GRIMA_EXTRAS} \
                ${TOPLEVEL} \
        "
        export GRIMA_EXTRAS

        . "${TOPLEVEL}"/etc/common
done

GRIMA_MAKEFLAGS=
export GRIMA_MAKEFLAGS

GRIMA_PYTHONFLAGS=
export GRIMA_PYTHONFLAGS

GRIMA_PYLINTFLAGS=--rcfile="${GRIMA_ETC}"/pylintrc
export GRIMA_PYLINTFLAGS

GRIMA_NOSETESTSFLAGS="--xunit-file=${GRIMA_HOME}/test-report-python.xml --cover-html --cover-package=grima -w ${GRIMA_SRC}/python/grima"
export GRIMA_NOSETESTSFLAGS

# $Id:$
#
# Local Variables:
# indent-tabs-mode: nil
# mode: sh
# sh-basic-offset: 8
# End:
# vim: ai et si sw=8 ts=8
