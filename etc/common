# grima

GRIMA_HOME=${TOPLEVEL:="${GRIMA_HOME}"}
GRIMA_HOME=$(cd "${GRIMA_HOME}"; pwd)
export GRIMA_HOME

GRIMA_BIN="${GRIMA_HOME}"/bin
export GRIMA_BIN

GRIMA_ETC="${GRIMA_HOME}"/etc
export GRIMA_ETC

GRIMA_LIB="${GRIMA_HOME}"/lib
export GRIMA_LIB

GRIMA_SHARE="${GRIMA_HOME}"/share
export GRIMA_SHARE

GRIMA_SRC="${GRIMA_HOME}"/src
export GRIMA_SRC

GRIMA_VAR="${GRIMA_HOME}"/var
export GRIMA_VAR

GRIMA_ARCHIVE="${GRIMA_VAR}"/archive
export GRIMA_ARCHIVE

GRIMA_DATA="${GRIMA_VAR}"/data
export GRIMA_DATA

GRIMA_DB="${GRIMA_VAR}"/db
export GRIMA_DB

GRIMA_LOG="${GRIMA_VAR}"/log
export GRIMA_LOG

GRIMA_RUN="${GRIMA_VAR}"/run
export GRIMA_RUN

GRIMA_WWW="${GRIMA_HOME}"/www
export GRIMA_WWW

GRIMA_DEPENDS="$(cat ${GRIMA_SHARE}/depends.list)"
export GRIMA_DEPENDS

GRIMA_CONFIGUREFLAGS="--prefix=${GRIMA_HOME}" 
export GRIMA_CONFIGUREFLAGS

GRIMA_LOGFILE="${GRIMA_LOG}"/grima.log
export GRIMA_LOGFILE

grima_record()
{
        date            >> "${GRIMA_LOGFILE}"
        echo "$1"       >> "${GRIMA_LOGFILE}"
}

grima_recorde()
{
        grima_record    "$1"
        echo            "$1"
}

# native

PATH="${GRIMA_BIN}":"${PATH}"
export PATH

PATH=/sbin:/usr/sbin:"${PATH}"
export PATH

LD_LIBRARY_PATH="${GRIMA_LIB}":"${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH

GRIMA_ACLOCALFLAGS="-I ${GRIMA_SHARE}/aclocal"
export GRIMA_ACLOCALFLAGS

for x in ${GRIMA_DEPENDS}; do
        [ ! -d /opt/${x} ] && continue

        PATH="/opt/${x}/bin:/opt/${x}/sbin:${PATH}"
        export PATH

        LD_LIBRARY_PATH="/opt/${x}/lib:${LD_LIBRARY_PATH}"
        export LD_LIBRARY_PATH

        PKG_CONFIG_PATH="/opt/${x}/lib/pkgconfig:${PKG_CONFIG_PATH}"
        export PKG_CONFIG_PATH

        ACLOCAL="/opt/${x}/share/aclocal"
        [ ! -d ${ACLOCAL} ] && continue
        GRIMA_ACLOCALFLAGS="-I ${ACLOCAL} ${GRIMA_ACLOCALFLAGS}"
done

SVNHOST=dev.creativedigitalsys.com
export SVNHOST

SVN=$(which svn)
export SVN

SVNFLAGS=
export SVNFLAGS

CC=$(which gcc)
export CC

CFLAGS=${CFLAGS:="-O0 -std=c99 -Wall -Werror"}

if [ ! "${DEBUG}" = "" ]; then
        CFLAGS="${CFLAGS} -g"
fi

export CFLAGS

MAKE=$(which make)
export MAKE

MAKEFLAGS=${MAKEFLAGS:="-k"}
export MAKEFLAGS

SWIG=$(which swig)
export SWIG

SWIGFLAGS=
export SWIGFLAGS

# python

PYTHON_HOME=/opt/python
export PYTHON_HOME

PYTHON="$(which python)"
export PYTHON

PYTHONFLAGS="-tt"

if [ ! "$DEBUG" = "" ]; then
   PYTHONFLAGS="${PYTHONFLAGS} -m trace -t"
fi

export PYTHONFLAGS

PYTHONPATH=${LD_LIBRARY_PATH}:${PYTHONPATH}
PYTHONPATH=${GRIMA_LIB}:${GRIMA_LIB}/python:${PYTHONPATH}
export PYTHONPATH

for x in ${GRIMA_DEPENDS}; do
        [ ! -d /opt/${x} ] && continue

        PYTHONPATH=/opt/${x}/lib:/opt/${x}/lib/python:${PYTHONPATH}
        export PYTHONPATH
done

# java

NETBEANS_HOME=/usr/share/netbeans
if [ -d /opt/netbeans ]; then
        NETBEANS_HOME=/opt/netbeans
fi
export NETBEANS_HOME

NETBEANS=netbeans
export NETBEANS

NETBEANSFLAGS=
export NETBEANSFLAGS

PATH=${NETBEANS_HOME}/bin:${PATH}
export PATH

# CLASSPATH=

for x in ${GRIMA_HOME}/dist/*.jar ${GRIMA_HOME}/lib/java/*.jar; do
        CLASSPATH="${x}:${CLASSPATH}"
done

for x in ${EXTRAS}; do
        for y in /opt/${x}/lib/*.jar; do
                CLASSPATH="${y}:${CLASSPATH}"
        done
done

JAVA_MODULES="                                                          \
        /usr/share/java/commons-cli.jar                                 \
        /usr/share/java/commons-daemon.jar                              \
        ${NETBEANS_HOME}/java2/modules/ext/AbsoluteLayout.jar           \
        ${NETBEANS_HOME}/platform9/modules/ext/swing-layout-1.0.3.jar   \
        ${NETBEANS_HOME}/platform9/modules/ext/junit-4.5.jar            \
"

for x in ${JAVA_MODULES}; do
        CLASSPATH="${x}:${CLASSPATH}"
done

export CLASSPATH

XXX="${JAVA_HOME}"

# Debian/Ubuntu & Fedora Core x86
XXX="${XXX} /usr/lib/jvm/java-6-sun"

# Debian/Ubuntu & Fedora Core ppc
XXX="${XXX} /usr/lib/j2sdk1.6-ibm"

# Yellowdog 3/4
XXX="${XXX} /opt/java"

for x in ${XXX}; do
        [ ! -d ${x} ] && continue

        JAVA_HOME=${x}
        export JAVA_HOME

        break
done

PATH=${JAVA_HOME}/bin:${PATH}
export PATH

JAVA=$(which java)
export JAVA

# JAVAFLAGS=
# JAVAFLAGS="${JAVAFLAGS} -Dgrima.home=${GRIMA_HOME}"
# JAVAFLAGS="${JAVAFLAGS} -Djava.library.path=${LD_LIBRARY_PATH}"
# JAVAFLAGS="${JAVAFLAGS} \
#         -Djava.util.logging.config.file=${GRIMA_ETC}/grima.properties"

if [ ! "${DEBUG}" = "" ]; then
        JAVAFLAGS="${JAVAFLAGS}"
        # JAVAFLAGS="${JAVAFLAGS} -Dcom.sun.management.jmxremote"
        # JAVAFLAGS="${JAVAFLAGS} -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,address=8000"
fi

# export JAVAFLAGS

ANT=$(which ant)
export ANT

ANTFLAGS="-Dplatform.home=\"${JAVA_HOME}\" -emacs"

if [ ! "${DEBUG}" = "" ]; then
        ANTFLAGS="${ANTFLAGS} -Djavac.debug=true"
fi

export ANTFLAGS

JSVC= # TODO: $(which jsvc)
export JSVC

JSVCFLAGS=
JSVCFLAGS="${JSVCFLAGS} ${JAVAFLAGS}"
JSVCFLAGS="${JSVCFLAGS} -cp ${CLASSPATH} -user ${USER}"
export JSVCFLAGS

# extras

GRIMA_EXTRAS=" \
        Elrond                  \
"

for x in ${GRIMA_EXTRAS}; do
        TOPLEVEL=${GRIMA_HOME}/extras/${x}
        . ${TOPLEVEL}/etc/common
done

